version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: einv-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks: [einv-net]

  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: einv-web
    depends_on:
      - postgres
    env_file: .env
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      # garante que o Django sabe que está atrás de proxy (Cloudflare → nginx)
      USE_X_FORWARDED_HOST: "1"
    command: ["gunicorn", "einventarioifce.wsgi:application", "--bind", "0.0.0.0:8000", "--workers", "3", "--timeout", "120"]
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    networks: [einv-net]

  nginx:
    image: nginx:1.27-alpine
    container_name: einv-nginx
    depends_on:
      - web
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/static:ro
      - media_volume:/media:ro
    networks: [einv-net]

volumes:
  pg_data:
  static_volume:
  media_volume:

networks:
  einv-net:
    driver: bridge
