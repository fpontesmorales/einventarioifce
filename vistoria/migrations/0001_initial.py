# Generated by Django 5.2.6 on 2025-09-25 13:58

import django.db.models.deletion
import vistoria.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('patrimonio', '0005_alter_sala_options_sala_bens_count'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Inventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano', models.PositiveIntegerField(unique=True, verbose_name='Ano')),
                ('ativo', models.BooleanField(default=False, verbose_name='Ativo')),
                ('incluir_livros', models.BooleanField(default=False, help_text='Quando desmarcado, livros ficam fora do escopo da campanha.', verbose_name='Incluir LIVROS (ED = 4490.52.18) no inventário?')),
                ('data_inicio', models.DateField(blank=True, null=True, verbose_name='Início')),
                ('data_fim', models.DateField(blank=True, null=True, verbose_name='Fim')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('criado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventarios_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Inventário',
                'verbose_name_plural': 'Inventários',
                'ordering': ['-ano'],
            },
        ),
        migrations.CreateModel(
            name='VistoriaBem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto_marcadagua', models.FileField(blank=True, null=True, upload_to=vistoria.models.upload_foto_bem, verbose_name='Foto do bem (marcada)')),
                ('status', models.CharField(choices=[('ENCONTRADO', 'Encontrado'), ('NAO_ENCONTRADO', 'Não encontrado')], default='ENCONTRADO', max_length=20, verbose_name='Resultado')),
                ('confere_descricao', models.BooleanField(default=True, verbose_name='Descrição confere com SUAP?')),
                ('confere_numero_serie', models.BooleanField(default=True, verbose_name='Número de série confere com SUAP?')),
                ('confere_local', models.BooleanField(default=True, verbose_name='Local confere com SUAP?')),
                ('confere_estado', models.BooleanField(default=True, verbose_name='Estado de conservação confere com SUAP?')),
                ('confere_responsavel', models.BooleanField(default=True, verbose_name='Responsável/carga confere com SUAP?')),
                ('descricao_obs', models.TextField(blank=True, null=True, verbose_name='Descrição observada (se divergente)')),
                ('numero_serie_obs', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número de série observado (se divergente)')),
                ('sala_obs_nome', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sala observada (se divergente)')),
                ('sala_obs_bloco', models.CharField(blank=True, max_length=64, null=True, verbose_name='Bloco observado (se divergente)')),
                ('estado_obs', models.CharField(blank=True, max_length=64, null=True, verbose_name='Estado observado (se divergente)')),
                ('responsavel_obs', models.CharField(blank=True, max_length=255, null=True, verbose_name='Responsável/usuário observado (se divergente)')),
                ('etiqueta_possui', models.BooleanField(default=True, verbose_name='Possui etiqueta?')),
                ('etiqueta_condicao', models.CharField(blank=True, choices=[('BOA', 'Boa'), ('RASURADA', 'Rasurada'), ('DESCOLANDO', 'Descolando'), ('FORA_PADRAO', 'Fora do padrão'), ('DIFICIL_VISUALIZACAO', 'Difícil visualização')], max_length=32, null=True, verbose_name='Condição da etiqueta')),
                ('avaria_texto', models.TextField(blank=True, null=True, verbose_name='Avaria (se houver)')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('divergente', models.BooleanField(db_index=True, default=False, verbose_name='Possui divergência?')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('atualizado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vistorias_bem_atualizadas', to=settings.AUTH_USER_MODEL, verbose_name='Atualizado por')),
                ('bem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vistorias', to='patrimonio.bem', verbose_name='Bem (SUAP)')),
                ('criado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vistorias_bem_criadas', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('inventario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vistorias_bens', to='vistoria.inventario', verbose_name='Inventário')),
            ],
            options={
                'verbose_name': 'Vistoria de Bem',
                'verbose_name_plural': 'Vistorias de Bens',
                'ordering': ['-atualizado_em'],
            },
        ),
        migrations.CreateModel(
            name='VistoriaExtra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto_marcadagua', models.FileField(upload_to=vistoria.models.upload_foto_extra, verbose_name='Foto do bem (marcada)')),
                ('descricao_obs', models.TextField(verbose_name='Descrição observada')),
                ('sala_obs_nome', models.CharField(max_length=255, verbose_name='Sala observada')),
                ('sala_obs_bloco', models.CharField(blank=True, max_length=64, null=True, verbose_name='Bloco observado')),
                ('numero_serie_obs', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número de série observado')),
                ('estado_obs', models.CharField(blank=True, max_length=64, null=True, verbose_name='Estado observado')),
                ('responsavel_obs', models.CharField(blank=True, max_length=255, null=True, verbose_name='Responsável/usuário observado')),
                ('etiqueta_possui', models.BooleanField(default=False, verbose_name='Possui etiqueta?')),
                ('etiqueta_condicao', models.CharField(blank=True, choices=[('BOA', 'Boa'), ('RASURADA', 'Rasurada'), ('DESCOLANDO', 'Descolando'), ('FORA_PADRAO', 'Fora do padrão'), ('DIFICIL_VISUALIZACAO', 'Difícil visualização')], max_length=32, null=True, verbose_name='Condição da etiqueta')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('criado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vistorias_extra_criadas', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('inventario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vistorias_extras', to='vistoria.inventario', verbose_name='Inventário')),
            ],
            options={
                'verbose_name': 'Vistoria (sem registro SUAP)',
                'verbose_name_plural': 'Vistorias (sem registro SUAP)',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.AddConstraint(
            model_name='inventario',
            constraint=models.UniqueConstraint(condition=models.Q(('ativo', True)), fields=('ativo',), name='unico_inventario_ativo'),
        ),
        migrations.AddIndex(
            model_name='vistoriabem',
            index=models.Index(fields=['inventario', 'status'], name='vistoria_vi_inventa_2caa97_idx'),
        ),
        migrations.AddIndex(
            model_name='vistoriabem',
            index=models.Index(fields=['inventario', 'divergente'], name='vistoria_vi_inventa_53dcb0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='vistoriabem',
            unique_together={('inventario', 'bem')},
        ),
    ]
