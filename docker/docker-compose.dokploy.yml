services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks: [einv-net]

  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      USE_X_FORWARDED_HOST: "1"
      # Defina no Dokploy (Environment):
      # POSTGRES_DB, POSTGRES_USER, POSTGRES_PASSWORD
      # SECRET_KEY, DEBUG=0
      # ALLOWED_HOSTS=10.10.2.46,localhost,127.0.0.1
      # CSRF_TRUSTED_ORIGINS=http://10.10.2.46
      # (opcional) DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    command: ["gunicorn", "einventarioifce.wsgi:application", "--bind", "0.0.0.0:8000", "--workers", "3", "--timeout", "120"]
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    networks: [einv-net]

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - web
    # Sem publish de porta (Traefik usa a 80 do host)
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/static:ro
      - media_volume:/media:ro
    networks:
      - einv-net
      - dokploy-network
    labels:
      traefik.enable: "true"
      traefik.http.routers.einventario.rule: "Host(`10.10.2.46`) || Host(`localhost`) || Host(`127.0.0.1`)"
      traefik.http.routers.einventario.entrypoints: web
      traefik.http.routers.einventario.service: einventario
      traefik.http.services.einventario.loadbalancer.server.port: "80"

volumes:
  pg_data:
  static_volume:
  media_volume:

networks:
  einv-net:
    driver: bridge
  dokploy-network:
    external: true
