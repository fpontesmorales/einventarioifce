  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    depends_on:
      - postgres
    working_dir: /app
    environment:
      # --- Banco (copiados para dentro do web) ---
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

      # --- Formatos que o settings.py entende (DB_* e DATABASE_URL) ---
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}

      # --- Fallback direto do driver psycopg (útil para manage.py) ---
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}

      # --- Proxy/Django ---
      USE_X_FORWARDED_HOST: "1"
      # (os demais – SECRET_KEY, DEBUG, ALLOWED_HOSTS, etc. – ficam no Environment do Dokploy)

    command: ["gunicorn", "einventarioifce.wsgi:application", "--bind", "0.0.0.0:8000", "--workers", "3", "--timeout", "120"]
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    networks: [einv-net]
